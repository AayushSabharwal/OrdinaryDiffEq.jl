image: "julia:1"

variables:
  JULIA_DEPOT_PATH: "$CI_PROJECT_DIR/.julia/"
  JULIA_NUM_THREADS: '8'

cache:
  paths:
    - .julia/

stages:
  - build
  - test

build:
  stage: build
  tags:
    - 'p6000'
  script:
    - curl https://julialang-s3.julialang.org/bin/linux/x64/1.3/julia-1.3.0-linux-x86_64.tar.gz -o julia.tar.gz
    - unp julia.tar.gz
    - export PATH="$(pwd)/julia-1.3.0/bin:$PATH"
    - julia -e "using InteractiveUtils;
                versioninfo()"
    - julia --project -e "using Pkg; Pkg.add(\"OrdinaryDiffEq\"); Pkg.build(\"OrdinaryDiffEq\"); using OrdinaryDiffEq"
  only:
  - master
  - tags
  - external
  - pushes
  artifacts:
    untracked: true
    paths:
      - .julia/**/*
      - julia-1.3.0/**/*

.test:
  extends: .root
  stage: test
  dependencies:
    - build
  before_script:
    - export PATH="$(pwd)/julia-${JULIA_VERSION}/bin:$PATH"
    - julia -e "using InteractiveUtils;
                versioninfo()"

test-arm1:
  extends: .test
  variables:
    GROUP: "Interface"
  script:
    - julia --project -e "using Pkg; Pkg.test();"

test-arm2:
  extends: .test
  variables:
    GROUP: "Regression"
  script:
    - julia --project -e "using Pkg; Pkg.test();"

test-multithreading:
  extends: .test
  variables:
    GROUP: "Multithreading"
  script:
    - julia --project -e "using Pkg; Pkg.test();"

test-GPU:
  extends: .test
  variables:
    GROUP: "GPU"
  script:
    - julia --project -e "using Pkg; Pkg.add(\"CuArrays\"); Pkg.test();"
